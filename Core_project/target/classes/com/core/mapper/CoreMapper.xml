<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.core.mapper.CoreMapper">
  <resultMap id="ProposalResult" type="com.core.model.ProposalVO">
    <id     property="PRPSL_NO"         column="PRPSL_NO"/>
    <result property="ID"               column="ID"/>
    <result property="CATEGORY"         column="CATEGORY"/>
    <result property="TITLE"            column="TITLE"/>
    <result property="CONTENT"          column="CONTENT"/>
    <result property="EXPECTATION_EFFECT" column="EXPECTATION_EFFECT"/>
    <result property="PRPSL_DT"         column="PRPSL_DT"/>
    <result property="ST_CD"            column="ST_CD"/>
    <result property="PRCS_NM"          column="PRCS_NM"/>
    <result property="RESULT_CONTENT"   column="RESULT_CONTENT"/>
    <result property="AGREE_CNT"        column="AGREE_CNT"/>
    <result property="DISAG_CNT"        column="DISAG_CNT"/>
  </resultMap>
  <!-- 회원가입 -->
   <insert id="join" parameterType="com.core.model.UserinfoVO">
      INSERT INTO userinfo (id,pw,nick,region,id_card, is_approved, joined_at)
      VALUES (#{id},#{pw},#{nick},#{region},#{id_card},#{is_approved},#{joined_at})
   </insert>
    <!-- 로그인 -->
    <select id="login" parameterType="com.core.model.UserinfoVO" resultType="com.core.model.UserinfoVO">
	    SELECT user_id AS ID, user_pw AS PW, user_name AS NICK, region AS REGION, id_card AS ID_CARD, is_approved AS IS_APPROVED, joined_at AS JOINED_AT
	    FROM Userinfo
	    WHERE ID = #{ID} AND PW = #{PW}
	</select>

    <!-- 회원탈퇴 -->
    <delete id="delete" parameterType="string">
	    DELETE FROM Userinfo WHERE ID = #{value, jdbcType=VARCHAR}
	</delete>

    <!-- 회원정보 수정 -->
    <update id="update" parameterType="com.core.model.UserinfoVO">
	    UPDATE Userinfo
	    SET user_pw = #{PW}, user_name = #{NICK}
	    WHERE user_id = #{ID}
	</update>

  <!-- 1) 제안 저장 -->
  <insert id="insertProposal"
          parameterType="com.core.model.ProposalVO"
          useGeneratedKeys="true"
          keyProperty="PRPSL_NO">
    INSERT INTO proposals
      (ID, CATEGORY, TITLE, CONTENT, EXPECTATION_EFFECT, PRPSL_DT,
       ST_CD, PRCS_NM, RESULT_CONTENT, AGREE_CNT, DISAG_CNT)
    VALUES
      (#{ID}, #{CATEGORY}, #{TITLE}, #{CONTENT}, #{EXPECTATION_EFFECT},
       NOW(), #{ST_CD}, #{PRCS_NM}, #{RESULT_CONTENT},
       #{AGREE_CNT}, #{DISAG_CNT})
  </insert>

  <!-- 2) 전체 제안 목록 조회 -->
  <select id="selectAllProposals" resultMap="ProposalResult">
    SELECT
      PRPSL_NO,
      ID,
      CATEGORY,
      TITLE,
      CONTENT,
      EXPECTATION_EFFECT,
      PRPSL_DT,
      ST_CD,
      PRCS_NM,
      RESULT_CONTENT,
      AGREE_CNT,
      DISAG_CNT
    FROM proposals
    ORDER BY PRPSL_DT DESC
  </select>

  <!-- 3) 단일 제안 조회 -->
  <select id="selectProposalById"
          parameterType="int"
          resultMap="ProposalResult">
    SELECT
      PRPSL_NO,
      ID,
      CATEGORY,
      TITLE,
      CONTENT,
      EXPECTATION_EFFECT,
      PRPSL_DT,
      ST_CD,
      PRCS_NM,
      RESULT_CONTENT,
      AGREE_CNT,
      DISAG_CNT
    FROM proposals
    WHERE PRPSL_NO = #{id}
  </select>

<!-- 유사도 분석 결과 목록 조회 -->
    <select id="similarSearch"
            parameterType="string"
            resultType="com.core.model.Ai_analysisVO">
        SELECT
            ANALYSIS_NO,
            PRPSL_NO,
            ANALYSIS_MODEL,
            ANALYSIS_RESULT,
            SIMILARITY,
            RECO_POLICY,
            ANALIZED_AT
        FROM AI_ANALYSIS
        WHERE MATCH(ANALYSIS_RESULT)
              AGAINST(#{idea} IN NATURAL LANGUAGE MODE)
        ORDER BY SIMILARITY DESC
    </select>
    
</mapper>
