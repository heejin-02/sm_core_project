<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.core.mapper.CoreMapper">

  <!-- 1. Proposal 관련 매핑 -->
  <resultMap id="ProposalResult" type="com.core.model.ProposalVO">
    <id     property="PRPSL_NO"         column="PRPSL_NO"/>
    <result property="ID"               column="ID"/>
    <result property="CATEGORY"         column="CATEGORY"/>
    <result property="TITLE"            column="TITLE"/>
    <result property="CONTENT"          column="CONTENT"/>
    <result property="EXPECTATION_EFFECT" column="EXPECTATION_EFFECT"/>
    <result property="PRPSL_DT"         column="PRPSL_DT"/>
    <result property="ST_CD"            column="ST_CD"/>
    <result property="PRCS_NM"          column="PRCS_NM"/>
    <result property="RESULT_CONTENT"   column="RESULT_CONTENT"/>
    <result property="AGREE_CNT"        column="AGREE_CNT"/>
    <result property="DISAG_CNT"        column="DISAG_CNT"/>
  </resultMap>

  <!-- 2. AI 분석 결과 매핑 -->
  <resultMap id="AiAnalysisResult" type="com.core.model.Ai_analysisVO">
    <id     property="ANALYSIS_NO"     column="ANALYSIS_NO"/>
    <result property="PRPSL_NO"         column="PRPSL_NO"/>
    <result property="ANALYSIS_MODEL"   column="ANALYSIS_MODEL"/>
    <result property="ANALYSIS_RESULT"  column="ANALYSIS_RESULT"/>
    <result property="SIMILARITY"       column="SIMILARITY"/>
    <result property="RECO_POLICY"      column="RECO_POLICY"/>
    <result property="ANALIZED_AT"      column="ANALIZED_AT"/>
  </resultMap>

  <!-- 3. 토론 게시글 매핑 -->
  <resultMap id="DiscussionPostResult" type="com.core.model.Discussion_postVO">
  <id     property="discussionId" column="DISCUSSION_ID"/>
  <result property="title"        column="TITLE"/>
  <result property="content"      column="CONTENT"/>
  <result property="authorId"     column="AUTHOR_ID"/>
  <result property="createdAt"    column="CREATED_AT"
          jdbcType="TIMESTAMP"
          javaType="java.sql.Timestamp"/>  
</resultMap>

<resultMap id="DiscussionCommentResult" type="com.core.model.Discussion_commentVO">
    <id     property="commentId"    column="COMMENT_ID"/>
    <result property="discussionId" column="DISCUSSION_ID"/>
    <result property="userId"       column="USER_ID"/>
    <result property="opinionType"  column="OPINION_TYPE"/>
    <result property="content"      column="CONTENT"/>
    <result property="createdAt"    column="CREATED_AT"
            jdbcType="TIMESTAMP"
            javaType="java.sql.Timestamp"/>
  </resultMap>

  <!-- 회원가입 -->
  <insert id="join" parameterType="com.core.model.UserinfoVO">
    INSERT INTO Userinfo (id, pw, nick, region, id_card, is_approved, joined_at)
    VALUES (#{id}, #{pw}, #{nick}, #{region}, #{id_card}, #{is_approved}, #{joined_at})
  </insert>

  <!-- 로그인 -->
  <select id="login"
          parameterType="com.core.model.UserinfoVO"
          resultType="com.core.model.UserinfoVO">
    SELECT * FROM Userinfo
     WHERE id = #{id}
       AND pw = #{pw}
  </select>

<!-- 아이디 중복 확인 -->
  <select id="checkId" parameterType="string" resultType="int">
    SELECT COUNT(*) FROM Userinfo WHERE id = #{id}
  </select>

  <!-- 회원 정보 수정 -->
  <update id="updateUserInfo" parameterType="com.core.model.UserinfoVO">
    UPDATE userinfo SET pw = #{pw}, nick = #{nick}, region = #{region} WHERE id = #{id}
  </update>

  <!-- 회원탈퇴 -->
  <delete id="delete" parameterType="string">
    DELETE FROM Userinfo WHERE ID = #{value, jdbcType=VARCHAR}
  </delete>
  
  <!-- 게시글 삭제 -->
  <delete id="deleteProposalById" parameterType="int">
   	 DELETE FROM PROPOSAL WHERE PRPSL_NO = #{id}
  </delete>

  <!-- 4. 정책 제안 -->
  <insert id="insertProposal"
          parameterType="com.core.model.ProposalVO"
          keyProperty="PRPSL_NO">
    INSERT INTO PROPOSAL (
      ID, CATEGORY, TITLE, CONTENT, EXPECTATION_EFFECT,
      PRPSL_DT, ST_CD, PRCS_NM, RESULT_CONTENT,
      AGREE_CNT, DISAG_CNT
    ) VALUES (
      #{ID}, #{CATEGORY}, #{TITLE}, #{CONTENT}, #{EXPECTATION_EFFECT},
      #{PRPSL_DT}, #{ST_CD}, #{PRCS_NM}, #{RESULT_CONTENT},
      #{AGREE_CNT}, #{DISAG_CNT}
    )
  </insert>

  <select id="selectAllProposals" resultMap="ProposalResult">
    SELECT * FROM PROPOSAL ORDER BY PRPSL_DT DESC
  </select>

  <select id="selectProposalById"
          parameterType="int"
          resultMap="ProposalResult">
    SELECT * FROM PROPOSAL WHERE PRPSL_NO = #{id}
  </select>

  <select id="selectByCategory"
          parameterType="string"
          resultMap="ProposalResult">
    SELECT * FROM PROPOSAL
     WHERE CATEGORY = #{category}
     ORDER BY PRPSL_DT DESC
  </select>

  <!-- 유사도 분석 -->
  <select id="similarSearch"
          parameterType="string"
          resultMap="AiAnalysisResult">
    SELECT * FROM AI_ANALYSIS
     WHERE ANALYSIS_RESULT LIKE '%' || #{idea} || '%'
     ORDER BY SIMILARITY DESC
  </select>

  <!-- 투표 관련 -->
  <select id="checkVote" resultType="com.core.model.ProposalVoteVO">
    SELECT PRPSL_NO AS prpslNo,
           USER_ID  AS userId,
           VOTE_TYPE
      FROM PROPOSAL_VOTE
     WHERE PRPSL_NO = #{prpslNo}
       AND USER_ID  = #{userId}
  </select>

  <insert id="insertVote" parameterType="com.core.model.ProposalVoteVO">
    INSERT INTO PROPOSAL_VOTE
      (PRPSL_NO, USER_ID, VOTE_TYPE)
    VALUES
      (#{prpslNo}, #{userId}, #{voteType})
  </insert>

  <update id="incrementAgree">
    UPDATE PROPOSAL
       SET AGREE_CNT = AGREE_CNT + 1
     WHERE PRPSL_NO = #{prpslNo}
  </update>

  <update id="incrementDisagree">
    UPDATE PROPOSAL
       SET DISAG_CNT = DISAG_CNT + 1
     WHERE PRPSL_NO = #{prpslNo}
  </update>

  <!-- 전체 조회 -->
  <select id="selectAllPosts" resultMap="DiscussionPostResult">
    SELECT DISCUSSION_ID, TITLE, CONTENT, AUTHOR_ID, CREATED_AT
      FROM DISCUSSION_POST
     ORDER BY CREATED_AT DESC
  </select>

  <!-- 제목 검색 -->
  <select id="searchPostsByTitle"
          parameterType="string"
          resultMap="DiscussionPostResult">
    SELECT DISCUSSION_ID, TITLE, CONTENT, AUTHOR_ID, CREATED_AT
      FROM DISCUSSION_POST
     WHERE TITLE LIKE '%' || #{keyword} || '%'
     ORDER BY CREATED_AT DESC
  </select>

  <!-- 삽입 -->
  <insert id="insertDiscussionPost"
          parameterType="com.core.model.Discussion_postVO"
          useGeneratedKeys="true"
          keyProperty="discussionId"
          keyColumn="DISCUSSION_ID">
    INSERT INTO DISCUSSION_POST (TITLE, CONTENT, AUTHOR_ID, CREATED_AT)
    VALUES (#{title}, #{content}, #{authorId}, #{createdAt})
  </insert>

  <!-- 단일 조회 -->
  <select id="selectPostById"
          parameterType="int"
          resultMap="DiscussionPostResult">
    SELECT DISCUSSION_ID, TITLE, CONTENT, AUTHOR_ID, CREATED_AT
      FROM DISCUSSION_POST
     WHERE DISCUSSION_ID = #{id}
  </select>
  
  <select id="selectCommentsByDiscussionId"
          parameterType="int"
          resultMap="DiscussionCommentResult">
    SELECT COMMENT_ID,
           DISCUSSION_ID,
           USER_ID,
           OPINION_TYPE,
           CONTENT,
           CREATED_AT
      FROM DISCUSSION_COMMENT
     WHERE DISCUSSION_ID = #{discussionId}
     ORDER BY CREATED_AT ASC
  </select>

 <insert id="insertDiscussionComment"
          parameterType="com.core.model.Discussion_commentVO">
    <selectKey keyProperty="commentId"
               resultType="int"
               order="BEFORE">
      SELECT COMMENT_SEQ.NEXTVAL FROM DUAL
    </selectKey>
    INSERT INTO DISCUSSION_COMMENT (
      COMMENT_ID,
      DISCUSSION_ID,
      USER_ID,
      OPINION_TYPE,
      CONTENT
    ) VALUES (
      #{commentId},
      #{discussionId},
      #{userId},
      #{opinionType},
      #{content}
    )
  </insert>

</mapper>